
Week1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000909  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000083f  00000000  00000000  00000b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002df  00000000  00000000  0000136c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000164c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000420  00000000  00000000  00001680  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000082  00000000  00000000  00001aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	11 d0       	rcall	.+34     	; 0xbc <main>
  9a:	4d c0       	rjmp	.+154    	; 0x136 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
#include <util/delay.h>
#include <stdint.h>

void wait( int ms )
{
	for (int i=0; i<ms; i++)
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	08 c0       	rjmp	.+16     	; 0xb4 <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a4:	ef ec       	ldi	r30, 0xCF	; 207
  a6:	f7 e0       	ldi	r31, 0x07	; 7
  a8:	31 97       	sbiw	r30, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <wait+0xa>
  ac:	00 c0       	rjmp	.+0      	; 0xae <wait+0x10>
  ae:	00 00       	nop
  b0:	2f 5f       	subi	r18, 0xFF	; 255
  b2:	3f 4f       	sbci	r19, 0xFF	; 255
  b4:	28 17       	cp	r18, r24
  b6:	39 07       	cpc	r19, r25
  b8:	ac f3       	brlt	.-22     	; 0xa4 <wait+0x6>
	{
		_delay_ms( 1 );
	}
}
  ba:	08 95       	ret

000000bc <main>:

int main( void )
{
	DDRD = 0xFF;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	81 bb       	out	0x11, r24	; 17
	DDRC = 0x00;
  c0:	14 ba       	out	0x14, r1	; 20
	
	int hertz = 1;
	
	while (1)
	{
		if (PINC & 0x01)
  c2:	98 9b       	sbis	0x13, 0	; 19
  c4:	03 c0       	rjmp	.+6      	; 0xcc <main+0x10>
		{
			hertz = 4;
  c6:	64 e0       	ldi	r22, 0x04	; 4
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <main+0x14>
			} else {
			hertz = 1;
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	70 e0       	ldi	r23, 0x00	; 0
		}
		
		wait(1000/hertz);
  d0:	88 ee       	ldi	r24, 0xE8	; 232
  d2:	93 e0       	ldi	r25, 0x03	; 3
  d4:	09 d0       	rcall	.+18     	; 0xe8 <__divmodhi4>
  d6:	eb 01       	movw	r28, r22
  d8:	cb 01       	movw	r24, r22
  da:	e1 df       	rcall	.-62     	; 0x9e <wait>
		PORTD = 0x01;
  dc:	81 e0       	ldi	r24, 0x01	; 1
		wait(1000/hertz);
  de:	82 bb       	out	0x12, r24	; 18
  e0:	ce 01       	movw	r24, r28
  e2:	dd df       	rcall	.-70     	; 0x9e <wait>
		PORTD = 0;
  e4:	12 ba       	out	0x12, r1	; 18
		
	}
  e6:	ed cf       	rjmp	.-38     	; 0xc2 <main+0x6>

000000e8 <__divmodhi4>:
  e8:	97 fb       	bst	r25, 7
  ea:	07 2e       	mov	r0, r23
  ec:	16 f4       	brtc	.+4      	; 0xf2 <__divmodhi4+0xa>
  ee:	00 94       	com	r0
  f0:	06 d0       	rcall	.+12     	; 0xfe <__divmodhi4_neg1>
  f2:	77 fd       	sbrc	r23, 7
  f4:	08 d0       	rcall	.+16     	; 0x106 <__divmodhi4_neg2>
  f6:	0b d0       	rcall	.+22     	; 0x10e <__udivmodhi4>
  f8:	07 fc       	sbrc	r0, 7
  fa:	05 d0       	rcall	.+10     	; 0x106 <__divmodhi4_neg2>
  fc:	3e f4       	brtc	.+14     	; 0x10c <__divmodhi4_exit>

000000fe <__divmodhi4_neg1>:
  fe:	90 95       	com	r25
 100:	81 95       	neg	r24
 102:	9f 4f       	sbci	r25, 0xFF	; 255
 104:	08 95       	ret

00000106 <__divmodhi4_neg2>:
 106:	70 95       	com	r23
 108:	61 95       	neg	r22
 10a:	7f 4f       	sbci	r23, 0xFF	; 255

0000010c <__divmodhi4_exit>:
 10c:	08 95       	ret

0000010e <__udivmodhi4>:
 10e:	aa 1b       	sub	r26, r26
 110:	bb 1b       	sub	r27, r27
 112:	51 e1       	ldi	r21, 0x11	; 17
 114:	07 c0       	rjmp	.+14     	; 0x124 <__udivmodhi4_ep>

00000116 <__udivmodhi4_loop>:
 116:	aa 1f       	adc	r26, r26
 118:	bb 1f       	adc	r27, r27
 11a:	a6 17       	cp	r26, r22
 11c:	b7 07       	cpc	r27, r23
 11e:	10 f0       	brcs	.+4      	; 0x124 <__udivmodhi4_ep>
 120:	a6 1b       	sub	r26, r22
 122:	b7 0b       	sbc	r27, r23

00000124 <__udivmodhi4_ep>:
 124:	88 1f       	adc	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	5a 95       	dec	r21
 12a:	a9 f7       	brne	.-22     	; 0x116 <__udivmodhi4_loop>
 12c:	80 95       	com	r24
 12e:	90 95       	com	r25
 130:	bc 01       	movw	r22, r24
 132:	cd 01       	movw	r24, r26
 134:	08 95       	ret

00000136 <_exit>:
 136:	f8 94       	cli

00000138 <__stop_program>:
 138:	ff cf       	rjmp	.-2      	; 0x138 <__stop_program>
